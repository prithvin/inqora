// (C) 2012 - 2014 PhpFiddle

(function(){var Pos=CodeMirror.Pos;function forEach(arr,f){for(var i=0,e=arr.length;i<e;++i)f(arr[i]);}
function arrayContains(arr,item){if(!Array.prototype.indexOf){var i=arr.length;while(i--){if(arr[i]===item){return true;}}
return false;}
return arr.indexOf(item)!=-1;}
function scriptHint(editor,keywords,getToken,options){var cur=editor.getCursor(),token=getToken(editor,cur),tprop=token;if(!/^[\w$_]*$/.test(token.string)){token=tprop={start:cur.ch,end:cur.ch,string:"",state:token.state,type:token.string=="."?"property":null};}
while(tprop.type=="property"){tprop=getToken(editor,Pos(cur.line,tprop.start));if(tprop.string!=".")return;tprop=getToken(editor,Pos(cur.line,tprop.start));if(tprop.string==')'){var level=1;do{tprop=getToken(editor,Pos(cur.line,tprop.start));switch(tprop.string){case')':level++;break;case'(':level--;break;default:break;}}while(level>0);tprop=getToken(editor,Pos(cur.line,tprop.start));if(tprop.type.indexOf("variable")===0)
tprop.type="function";else return;}
if(!context)var context=[];context.push(tprop);}
return{list:getCompletions(token,context,keywords,options),from:Pos(cur.line,token.start),to:Pos(cur.line,token.end)};}
CodeMirror.javascriptHint=function(editor,options){return scriptHint(editor,javascriptKeywords,function(e,cur){return e.getTokenAt(cur);},options);};function getCoffeeScriptToken(editor,cur){var token=editor.getTokenAt(cur);if(cur.ch==token.start+1&&token.string.charAt(0)=='.'){token.end=token.start;token.string='.';token.type="property";}
else if(/^\.[\w$_]*$/.test(token.string)){token.type="property";token.start++;token.string=token.string.replace(/\./,'');}
return token;}
CodeMirror.coffeescriptHint=function(editor,options){return scriptHint(editor,coffeescriptKeywords,getCoffeeScriptToken,options);};var stringProps=("charAt charCodeAt indexOf lastIndexOf substring substr slice trim trimLeft trimRight "+"toUpperCase toLowerCase split concat match replace search").split(" ");var arrayProps=("length concat join splice push pop shift unshift slice reverse sort indexOf "+"lastIndexOf every some filter forEach map reduce reduceRight ").split(" ");var funcProps="prototype apply call bind".split(" ");var javascriptKeywords=("$GLOBALS $_SERVER $_GET $_POST $_FILES $_REQUEST $_SESSION $_ENV $_COOKIE $php_errormsg $HTTP_RAW_POST_DATA $http_response_header $argc $argv __CLASS__ __DIR__ __FILE__ __FUNCTION__ __LINE__ __METHOD__ __NAMESPACE__ __autoload __halt_compiler "+"abs acos acosh addcslashes addslashes array array_change_key_case array_chunk array_column array_combine array_count_values array_diff array_diff_assoc array_diff_key array_diff_uassoc array_diff_ukey array_fill array_fill_keys array_filter array_flip array_intersect array_intersect_assoc array_intersect_key array_intersect_uassoc array_intersect_ukey array_key_exists array_keys array_map array_merge array_merge_recursive array_multisort array_pad array_pop array_product array_push array_rand array_reduce array_replace array_replace_recursive array_reverse array_search array_shift array_slice array_splice array_sum array_udiff array_udiff_assoc array_udiff_uassoc array_uintersect array_uintersect_assoc array_uintersect_uassoc array_unique array_unshift array_values array_walk array_walk_recursive arsort asin asinh asort assert assert_options atan atan2 atanh base_convert base64_decode base64_encode basename bin2hex bindec boolval call_user_func call_user_func_array call_user_method call_user_method_array ceil chdir checkdnsrr chgrp chmod chop chown chr chroot chunk_split class_alias class_exists class_implements class_parents class_uses clearstatcache closedir closelog compact connection_aborted connection_status connection_timeout constant convert_cyr_string convert_uudecode convert_uuencode copy cos cosh count count_chars crc32 create_function crypt ctype_alnum ctype_alpha ctype_cntrl ctype_digit ctype_graph ctype_lower ctype_print ctype_punct ctype_space ctype_upper ctype_xdigit curl_close curl_copy_handle curl_errno curl_error curl_escape curl_exec curl_file_create curl_getinfo curl_init curl_multi_add_handle curl_multi_close curl_multi_exec curl_multi_getcontent curl_multi_info_read curl_multi_init curl_multi_remove_handle curl_multi_select curl_multi_setopt curl_multi_strerror curl_pause curl_reset curl_setopt curl_setopt_array curl_share_close curl_share_init curl_share_setopt curl_strerror curl_unescape curl_version current "+"date date_default_timezone_get date_default_timezone_set debug_backtrace debug_print_backtrace debug_zval_dump decbin dechex decoct define define_syslog_variables defined deg2rad delete die dir dirname disk_free_space disk_total_space diskfreespace dns_check_record dns_get_mx dns_get_record doubleval each echo empty end error_get_last error_log error_reporting eval Exception::__clone Exception::__construct Exception::__toString Exception::getCode Exception::getFile Exception::getLine Exception::getMessage Exception::getPrevious Exception::getTrace Exception::getTraceAsString exit exp explode expm1 extension_loaded extract fclose feof fflush fgetc fgetcsv fgets fgetss file file_exists file_get_contents file_put_contents fileatime filectime filegroup fileinode filemtime fileowner fileperms filesize filetype filter_has_var filter_id filter_input filter_input_array filter_list filter_var filter_var_array floatval flock floor flush fmod fnmatch fopen forward_static_call forward_static_call_array fpassthru fprintf fputcsv fputs fread fscanf fseek fsockopen fstat ftell ftruncate func_get_arg func_get_args func_num_args function_exists fwrite "+"gd_info get_browser get_called_class get_cfg_var get_class get_class_methods get_class_vars get_current_user get_declared_classes get_declared_interfaces get_declared_traits get_defined_constants get_defined_functions get_defined_vars get_extension_funcs get_headers get_html_translation_table get_include_path get_included_files get_loaded_extensions get_magic_quotes_gpc get_magic_quotes_runtime get_meta_tags get_object_vars get_parent_class get_required_files get_resource_type getcwd getenv gethostbyaddr gethostbyname gethostbynamel gethostname getimagesize getimagesizefromstring getlastmod getmxrr getmygid getmyinode getmypid getmyuid getopt getprotobyname getprotobynumber getrandmax getrusage getservbyname getservbyport gettype glob hash header header_register_callback header_remove headers_list headers_sent hebrev hebrevc hex2bin hexdec highlight_file highlight_string html_entity_decode htmlentities htmlspecialchars htmlspecialchars_decode http_build_query http_response_code hypot ignore_user_abort image_type_to_extension image_type_to_mime_type image2wbmp imageaffine imageaffinematrixconcat imageaffinematrixget imagealphablending imageantialias imagearc imagechar imagecharup imagecolorallocate imagecolorallocatealpha imagecolorat imagecolorclosest imagecolorclosestalpha imagecolorclosesthwb imagecolordeallocate imagecolorexact imagecolorexactalpha imagecolormatch imagecolorresolve imagecolorresolvealpha imagecolorset imagecolorsforindex imagecolorstotal imagecolortransparent imageconvolution imagecopy imagecopymerge imagecopymergegray imagecopyresampled imagecopyresized imagecreate imagecreatefromgd2 imagecreatefromgd2part imagecreatefromgd imagecreatefromgif imagecreatefromjpeg imagecreatefrompng imagecreatefromstring imagecreatefromwbmp imagecreatefromwebp imagecreatefromxbm imagecreatefromxpm imagecreatetruecolor imagecrop imagecropauto imagedashedline imagedestroy imageellipse imagefill imagefilledarc imagefilledellipse imagefilledpolygon imagefilledrectangle imagefilltoborder imagefilter imageflip imagefontheight imagefontwidth imageftbbox imagefttext imagegammacorrect imagegd2 imagegd imagegif imagegrabscreen imagegrabwindow imageinterlace imageistruecolor imagejpeg imagelayereffect imageline imageloadfont imagepalettecopy imagepalettetotruecolor imagepng imagepolygon imagepsbbox imagepsencodefont imagepsextendfont imagepsfreefont imagepsloadfont imagepsslantfont imagepstext imagerectangle imagerotate imagesavealpha imagescale imagesetbrush imagesetinterpolation imagesetpixel imagesetstyle imagesetthickness imagesettile imagestring imagestringup imagesx imagesy imagetruecolortopalette imagettfbbox imagettftext imagetypes imagewbmp imagewebp imagexbm implode import_request_variables in_array inet_ntop inet_pton ini_alter ini_get ini_get_all ini_restore ini_set interface_exists intval ip2long is_a is_array is_bool is_callable is_dir is_double is_executable is_file is_finite is_float is_infinite is_int is_integer is_link is_long is_nan is_null is_numeric is_object is_readable is_real is_resource is_scalar is_string is_subclass_of is_uploaded_file is_writable is_writeable isset iterator_apply iterator_count iterator_to_array "+"json_decode json_encode json_last_error_msg json_last_error join key key_exists krsort ksort lcfirst lcg_value lchgrp lchown levenshtein link linkinfo list localeconv localtime log log10 log1p long2ip lstat ltrim max mb_check_encoding mb_convert_case mb_convert_encoding mb_convert_kana mb_convert_variables mb_decode_mimeheader mb_decode_numericentity mb_detect_encoding mb_detect_order mb_encode_mimeheader mb_encode_numericentity mb_encoding_aliases mb_ereg_match mb_ereg_replace_callback mb_ereg_replace mb_ereg_search_getpos mb_ereg_search_getregs mb_ereg_search_init mb_ereg_search_pos mb_ereg_search_regs mb_ereg_search_setpos mb_ereg_search mb_ereg mb_eregi_replace mb_eregi mb_get_info mb_http_input mb_http_output mb_internal_encoding mb_language mb_list_encodings mb_output_handler mb_parse_str mb_preferred_mime_name mb_regex_encoding mb_regex_set_options mb_send_mail mb_split mb_strcut mb_strimwidth mb_stripos mb_stristr mb_strlen mb_strpos mb_strrchr mb_strrichr mb_strripos mb_strrpos mb_strstr mb_strtolower mb_strtoupper mb_strwidth mb_substitute_character mb_substr_count mb_substr md5 md5_file memory_get_peak_usage memory_get_usage metaphone method_exists microtime min mkdir mktime money_format move_uploaded_file mt_getrandmax mt_rand mt_srand mysqli_affected_rows mysqli_autocommit mysqli_change_user mysqli_character_set_name mysqli_close mysqli_commit mysqli_connect mysqli_connect_errno mysqli_connect_error mysqli_data_seek mysqli_debug mysqli_dump_debug_info mysqli_errno mysqli_error mysqli_fetch_all mysqli_fetch_array mysqli_fetch_assoc mysqli_fetch_field mysqli_fetch_field_direct mysqli_fetch_fields mysqli_fetch_lengths mysqli_fetch_object mysqli_fetch_row mysqli_field_count mysqli_field_seek mysqli_field_tell mysqli_free_result mysqli_get_cache_stats mysqli_get_charset mysqli_get_client_info mysqli_get_client_info mysqli_get_client_stats mysqli_get_client_version mysqli_get_connection_stats mysqli_get_host_info mysqli_get_proto_info mysqli_get_server_info mysqli_get_server_info mysqli_get_server_version mysqli_get_warnings mysqli_info mysqli_init mysqli_insert_id mysqli_kill mysqli_more_results mysqli_multi_query mysqli_next_result mysqli_num_fields mysqli_num_rows mysqli_options mysqli_ping mysqli_prepare mysqli_query mysqli_real_connect mysqli_real_escape_string mysqli_real_query mysqli_refresh mysqli_rollback mysqli_select_db mysqli_set_charset mysqli_set_local_infile_default mysqli_set_local_infile_handler mysqli_sqlstate mysqli_ssl_set mysqli_stat mysqli_stmt_affected_rows mysqli_stmt_attr_get mysqli_stmt_attr_set mysqli_stmt_bind_param mysqli_stmt_bind_result mysqli_stmt_close mysqli_stmt_data_seek mysqli_stmt_errno mysqli_stmt_error mysqli_stmt_execute mysqli_stmt_fetch mysqli_stmt_field_count mysqli_stmt_free_result mysqli_stmt_get_result mysqli_stmt_get_warnings mysqli_stmt_init mysqli_stmt_insert_id mysqli_stmt_num_rows mysqli_stmt_num_rows mysqli_stmt_param_count mysqli_stmt_prepare mysqli_stmt_reset mysqli_stmt_result_metadata mysqli_stmt_send_long_data mysqli_stmt_sqlstate mysqli_stmt_store_result mysqli_store_result mysqli_thread_id mysqli_thread_safe mysqli_use_result mysqli_warning_count "+"natcasesort natsort next nl_langinfo nl2br number_format ob_clean ob_end_clean ob_end_flush ob_flush ob_get_clean ob_get_contents ob_get_flush ob_get_length ob_get_level ob_get_status ob_gzhandler ob_implicit_flush ob_list_handlers ob_start octdec opendir openlog ord output_add_rewrite_var output_reset_rewrite_vars pack parse_ini_file parse_ini_string parse_str parse_url pathinfo pclose PDO::__construct PDO::beginTransaction PDO::commit PDO::errorCode PDO::errorInfo PDO::exec PDO::getAttribute PDO::getAvailableDrivers PDO::inTransaction PDO::lastInsertId PDO::prepare PDO::query PDO::quote PDO::rollBack PDO::setAttribute PDOStatement::bindColumn PDOStatement::bindParam PDOStatement::bindValue PDOStatement::closeCursor PDOStatement::columnCount PDOStatement::debugDumpParams PDOStatement::errorCode PDOStatement::errorInfo PDOStatement::execute PDOStatement::fetch PDOStatement::fetchAll PDOStatement::fetchColumn PDOStatement::fetchObject PDOStatement::getAttribute PDOStatement::getColumnMeta PDOStatement::nextRowset PDOStatement::rowCount PDOStatement::setAttribute PDOStatement::setFetchMode pfsockopen php_check_syntax php_ini_loaded_file php_ini_scanned_files php_logo_guid php_sapi_name php_strip_whitespace php_uname phpcredits phpinfo phpversion pi popen pos pow preg_filter preg_grep preg_last_error preg_match preg_match_all preg_quote preg_replace preg_replace_callback preg_split prev print print_r printf property_exists putenv quoted_printable_decode quoted_printable_encode quotemeta rad2deg rand range rawurldecode rawurlencode readdir readfile readlink realpath realpath_cache_get realpath_cache_size register_shutdown_function register_tick_function rename reset restore_error_handler restore_exception_handler restore_include_path rewind rewinddir rmdir round rsort rtrim "+"scandir serialize session_cache_expire session_cache_limiter session_commit session_decode session_destroy session_encode session_get_cookie_params session_id session_is_registered session_module_name session_name session_regenerate_id session_register session_register_shutdown session_save_path session_set_cookie_params session_set_save_handler session_start session_status session_unregister session_unset session_write_close set_error_handler set_exception_handler set_file_buffer set_include_path set_socket_blocking setcookie setlocale setrawcookie settype sha1 sha1_file show_source shuffle similar_text simplexml_import_dom simplexml_load_file simplexml_load_string SimpleXMLElement::__construct SimpleXMLElement::addAttribute SimpleXMLElement::addChild SimpleXMLElement::asXML SimpleXMLElement::attributes SimpleXMLElement::children SimpleXMLElement::count SimpleXMLElement::getDocNamespaces SimpleXMLElement::getName SimpleXMLElement::getNamespaces SimpleXMLElement::registerXPathNamespace SimpleXMLElement::saveXML SimpleXMLElement::xpath SimpleXMLIterator::current SimpleXMLIterator::getChildren SimpleXMLIterator::hasChildren SimpleXMLIterator::key SimpleXMLIterator::next SimpleXMLIterator::rewind SimpleXMLIterator::valid sin sinh sizeof sleep socket_get_status socket_set_blocking socket_set_timeout sort soundex spl_autoload spl_autoload_call spl_autoload_extensions spl_autoload_functions spl_autoload_register spl_autoload_unregister spl_classes spl_object_hash sprintf sqrt srand sscanf stat str_getcsv str_ireplace str_pad str_repeat str_replace str_rot13 str_shuffle str_split str_word_count strcasecmp strchr strcmp strcoll strcspn stream_bucket_append stream_bucket_make_writeable stream_bucket_new stream_bucket_prepend stream_context_create stream_context_get_default stream_context_get_options stream_context_get_params stream_context_set_default stream_context_set_option stream_context_set_params stream_copy_to_stream stream_encoding stream_filter_append stream_filter_prepend stream_filter_register stream_filter_remove stream_get_contents stream_get_filters stream_get_line stream_get_meta_data stream_get_transports stream_get_wrappers stream_is_local stream_notification_callback stream_register_wrapper stream_resolve_include_path stream_select stream_set_blocking stream_set_chunk_size stream_set_read_buffer stream_set_timeout stream_set_write_buffer stream_socket_accept stream_socket_client stream_socket_enable_crypto stream_socket_get_name stream_socket_pair stream_socket_recvfrom stream_socket_sendto stream_socket_server stream_socket_shutdown stream_supports_lock stream_wrapper_register stream_wrapper_restore stream_wrapper_unregister streamWrapper::__construct streamWrapper::__destruct streamWrapper::dir_closedir streamWrapper::dir_opendir streamWrapper::dir_readdir streamWrapper::dir_rewinddir streamWrapper::mkdir streamWrapper::rename streamWrapper::rmdir streamWrapper::stream_cast streamWrapper::stream_close streamWrapper::stream_eof streamWrapper::stream_flush streamWrapper::stream_lock streamWrapper::stream_metadata streamWrapper::stream_open streamWrapper::stream_read streamWrapper::stream_seek streamWrapper::stream_set_option streamWrapper::stream_stat streamWrapper::stream_tell streamWrapper::stream_truncate streamWrapper::stream_write streamWrapper::unlink streamWrapper::url_stat "+"strftime strip_tags stripcslashes stripos stripslashes strstr strlen strnatcasecmp strnatcmp strncasecmp strncmp strpbrk strpos strrchr strrev strripos strrpos strspn strstr strtok strtolower strtoupper strtr strval substr substr_compare substr_count substr_replace symlink sys_get_temp_dir sys_getloadavg syslog tan tanh tempnam time time_nanosleep time_sleep_until tmpfile touch trait_exists trigger_error trim uasort ucfirst ucwords uksort umask uniqid unlink unpack unregister_tick_function unserialize unset urldecode urlencode user_error usleep usort var_dump var_export version_compare vfprintf vprintf vsprintf wordwrap zend_logo_guid zend_thread_id zend_version").split(" ");var coffeescriptKeywords=("break case catch continue debugger default delete do else finally for function if in instanceof new return switch this throw try typeof var void whil ewith Infinity NaN undefined length valueOf toString decodeURI decodeURIComponent encodeURI encodeURIComponent escape eval isFinite isNaN Number parseFloat parseInt String unescape charAt charCodeAt concat fromCharCode indexOf lastIndexOf localeCompare match replace search slice split substr substring toLocaleLowerCase toLocaleUpperCase toLowerCase toUpperCase trim exec test concat indexOf join lastIndexOf pop push reverse shift slice sort splice unshift MAX_VALUE MIN_VALUE NEGATIVE_INFINITY POSITIVE_INFINITY toExponential toFixed toPrecision abs acos asin atan ceil cos exp floor log max min pow random round sin sqrt tan getDate getDay getFullYear getHours getMilliseconds getMinutes getMonth getSeconds getTime getTimezoneOffset getUTCDate getUTCDay getUTCFullYear getUTCHours getUTCMilliseconds getUTCMinutes getUTCMonth getUTCSeconds getYear parse setFullYear setHours setMilliseconds setMinutes setMonth setSeconds setTime setUTCDate setUTCFullYear setUTCHours setUTCMilliseconds setUTCMinutes setUTCMonth setUTCSeconds setYear toDateString toGMTString toISOString toJSON toLocaleDateString toLocaleTimeString toLocaleString toString toTimeString toUTCString UTC closed defaultStatus document frames history innerHeight innerWidth length location name navigator outerHeight outerWidth pageXOffset pageYOffset parent screen screenTop screenX screenY self status top alert atob blur btoa clearInterval clearTimeout close confirm createPopup focus moveBy moveTo open print prompt resizeBy resizeTo scroll scrollBy scrollTo setInterval setTimeout stop document.adoptNode document.anchors document.applets document.baseURI document.body document.close document.cookie document.createAttribute document.createComment document.createDocumentFragment document.createElement document.createTextNode document.doctype document.documentElement document.documentMode document.documentURI document.domain document.domConfig document.forms document.getElementById document.getElementsByName document.getElementsByTagName document.images document.implementation document.importNode document.inputEncoding document.lastModified document.links document.normalize document.normalizeDocument document.open document.readyState document.referrer document.renameNode document.strictErrorChecking document.title document.URL document.write document.writeln").split(" ");function getCompletions(token,context,keywords,options){var found=[],start=token.string;function maybeAdd(str){if(str.indexOf(start)==0&&!arrayContains(found,str))found.push(str);}
function gatherCompletions(obj){if(typeof obj=="string")forEach(stringProps,maybeAdd);else if(obj instanceof Array)forEach(arrayProps,maybeAdd);else if(obj instanceof Function)forEach(funcProps,maybeAdd);for(var name in obj)maybeAdd(name);}
if(context){var obj=context.pop(),base;if(obj.type.indexOf("variable")===0){if(options&&options.additionalContext)
base=options.additionalContext[obj.string];base=base||window[obj.string];}else if(obj.type=="string"){base="";}else if(obj.type=="atom"){base=1;}else if(obj.type=="function"){if(window.jQuery!=null&&(obj.string=='$'||obj.string=='jQuery')&&(typeof window.jQuery=='function'))
base=window.jQuery();else if(window._!=null&&(obj.string=='_')&&(typeof window._=='function'))
base=window._();}
while(base!=null&&context.length)
base=base[context.pop().string];if(base!=null)gatherCompletions(base);}
else{forEach(keywords,maybeAdd);}
return found;}
CodeMirror.simpleHint=function(editor,getHints,givenOptions){var options={},defaults=CodeMirror.simpleHint.defaults;for(var opt in defaults)
if(defaults.hasOwnProperty(opt))
options[opt]=(givenOptions&&givenOptions.hasOwnProperty(opt)?givenOptions:defaults)[opt];function collectHints(previousToken){if(editor.somethingSelected())return;var tempToken=editor.getTokenAt(editor.getCursor());if(options.closeOnTokenChange&&previousToken!=null&&(tempToken.start!=previousToken.start||tempToken.type!=previousToken.type)){return;}
var result=getHints(editor,givenOptions);if(!result||!result.list.length)return;var completions=result.list;function insert(str){editor.replaceRange(str,result.from,result.to);}
if(options.completeSingle&&completions.length==1){insert(completions[0]);return true;}
var complete=document.createElement("div");complete.className="CodeMirror-completions";var sel=complete.appendChild(document.createElement("select"));if(!window.opera)sel.multiple=true;for(var i=0;i<completions.length;++i){var opt=sel.appendChild(document.createElement("option"));opt.appendChild(document.createTextNode(completions[i]));}
sel.firstChild.selected=true;sel.size=Math.min(10,completions.length);var pos=editor.cursorCoords(options.alignWithWord?result.from:null);complete.style.left=pos.left+"px";complete.style.top=pos.bottom+"px";document.body.appendChild(complete);var winW=window.innerWidth||Math.max(document.body.offsetWidth,document.documentElement.offsetWidth);if(winW-pos.left<sel.clientWidth)
complete.style.left=(pos.left-sel.clientWidth)+"px";if(completions.length<=10)
complete.style.width=(sel.clientWidth-1)+"px";var done=false;function close(){if(done)return;done=true;complete.parentNode.removeChild(complete);}
function pick(){insert(completions[sel.selectedIndex]);close();setTimeout(function(){editor.focus();},50);}
CodeMirror.on(sel,"blur",close);CodeMirror.on(sel,"keydown",function(event){var code=event.keyCode;if(code==13){CodeMirror.e_stop(event);pick();}
else if(code==27){CodeMirror.e_stop(event);close();editor.focus();}
else if(code!=38&&code!=40&&code!=33&&code!=34&&!CodeMirror.isModifierKey(event)){close();editor.focus();editor.triggerOnKeyDown(event);if(!options.closeOnBackspace||code!=8){setTimeout(function(){collectHints(tempToken);},50);}}});CodeMirror.on(sel,"dblclick",pick);sel.focus();if(window.opera)setTimeout(function(){if(!done)sel.focus();},100);return true;}
return collectHints();};CodeMirror.simpleHint.defaults={closeOnBackspace:true,closeOnTokenChange:false,completeSingle:true,alignWithWord:true};function dialogDiv(cm,template,bottom){var wrap=cm.getWrapperElement();var dialog;dialog=wrap.appendChild(document.createElement("div"));if(bottom){dialog.className="CodeMirror-dialog CodeMirror-dialog-bottom";}else{dialog.className="CodeMirror-dialog CodeMirror-dialog-top";}
dialog.innerHTML=template;return dialog;}
CodeMirror.defineExtension("openDialog",function(template,callback,options){var dialog=dialogDiv(this,template,options&&options.bottom);var closed=false,me=this;function close(){if(closed)return;closed=true;dialog.parentNode.removeChild(dialog);}
var inp=dialog.getElementsByTagName("input")[0],button;if(inp){CodeMirror.on(inp,"keydown",function(e){if(e.keyCode==13||e.keyCode==27){CodeMirror.e_stop(e);close();me.focus();if(e.keyCode==13)callback(inp.value);}});if(options&&options.value)inp.value=options.value;inp.focus();CodeMirror.on(inp,"blur",close);}else if(button=dialog.getElementsByTagName("button")[0]){CodeMirror.on(button,"click",function(){close();me.focus();});button.focus();CodeMirror.on(button,"blur",close);}
return close;});CodeMirror.defineExtension("openConfirm",function(template,callbacks,options){var dialog=dialogDiv(this,template,options&&options.bottom);var buttons=dialog.getElementsByTagName("button");var closed=false,me=this,blurring=1;function close(){if(closed)return;closed=true;dialog.parentNode.removeChild(dialog);me.focus();}
buttons[0].focus();for(var i=0;i<buttons.length;++i){var b=buttons[i];(function(callback){CodeMirror.on(b,"click",function(e){CodeMirror.e_preventDefault(e);close();if(callback)callback(me);});})(callbacks[i]);CodeMirror.on(b,"blur",function(){--blurring;setTimeout(function(){if(blurring<=0)close();},200);});CodeMirror.on(b,"focus",function(){++blurring;});}});function searchOverlay(query){if(typeof query=="string")return{token:function(stream){if(stream.match(query))return"searching";stream.next();stream.skipTo(query.charAt(0))||stream.skipToEnd();}};return{token:function(stream){if(stream.match(query))return"searching";while(!stream.eol()){stream.next();if(stream.match(query,false))break;}}};}
function SearchState(){this.posFrom=this.posTo=this.query=null;this.overlay=null;}
function getSearchState(cm){return cm._searchState||(cm._searchState=new SearchState());}
function getSearchCursor(cm,query,pos){return cm.getSearchCursor(query,pos,typeof query=="string"&&query==query.toLowerCase());}
function dialog(cm,text,shortText,f){if(cm.openDialog)cm.openDialog(text,f);else f(prompt(shortText,""));}
function confirmDialog(cm,text,shortText,fs){if(cm.openConfirm)cm.openConfirm(text,fs);else if(confirm(shortText))fs[0]();}
function parseQuery(query){var isRE=query.match(/^\/(.*)\/([a-z]*)$/);return isRE?new RegExp(isRE[1],isRE[2].indexOf("i")==-1?"":"i"):query;}
var queryDialog='Search: <input type="text" style="width: 10em"/> <span style="color: #888">(Use /re/ syntax for regexp search)</span>';function doSearch(cm,rev){var state=getSearchState(cm);if(state.query)return findNext(cm,rev);dialog(cm,queryDialog,"Search for:",function(query){cm.operation(function(){if(!query||state.query)return;state.query=parseQuery(query);cm.removeOverlay(state.overlay);state.overlay=searchOverlay(query);cm.addOverlay(state.overlay);state.posFrom=state.posTo=cm.getCursor();findNext(cm,rev);});});}
function findNext(cm,rev){cm.operation(function(){var state=getSearchState(cm);var cursor=getSearchCursor(cm,state.query,rev?state.posFrom:state.posTo);if(!cursor.find(rev)){cursor=getSearchCursor(cm,state.query,rev?CodeMirror.Pos(cm.lastLine()):CodeMirror.Pos(cm.firstLine(),0));if(!cursor.find(rev))return;}
cm.setSelection(cursor.from(),cursor.to());state.posFrom=cursor.from();state.posTo=cursor.to();});}
function clearSearch(cm){cm.operation(function(){var state=getSearchState(cm);if(!state.query)return;state.query=null;cm.removeOverlay(state.overlay);});}
var replaceQueryDialog='Replace: <input type="text" style="width: 10em"/> <span style="color: #888">(Use /re/ syntax for regexp search)</span>';var replacementQueryDialog='With: <input type="text" style="width: 10em"/>';var doReplaceConfirm="Replace? <button>Yes</button> <button>No</button> <button>Stop</button>";function replace(cm,all){dialog(cm,replaceQueryDialog,"Replace:",function(query){if(!query)return;query=parseQuery(query);dialog(cm,replacementQueryDialog,"Replace with:",function(text){if(all){cm.operation(function(){for(var cursor=getSearchCursor(cm,query);cursor.findNext();){if(typeof query!="string"){var match=cm.getRange(cursor.from(),cursor.to()).match(query);cursor.replace(text.replace(/\$(\d)/,function(_,i){return match[i];}));}else cursor.replace(text);}});}else{clearSearch(cm);var cursor=getSearchCursor(cm,query,cm.getCursor());var advance=function(){var start=cursor.from(),match;if(!(match=cursor.findNext())){cursor=getSearchCursor(cm,query);if(!(match=cursor.findNext())||(start&&cursor.from().line==start.line&&cursor.from().ch==start.ch))return;}
cm.setSelection(cursor.from(),cursor.to());confirmDialog(cm,doReplaceConfirm,"Replace?",[function(){doReplace(match);},advance]);};var doReplace=function(match){cursor.replace(typeof query=="string"?text:text.replace(/\$(\d)/,function(_,i){return match[i];}));advance();};advance();}});});}
CodeMirror.commands.find=function(cm){clearSearch(cm);doSearch(cm);};CodeMirror.commands.findNext=doSearch;CodeMirror.commands.findPrev=function(cm){doSearch(cm,true);};CodeMirror.commands.clearSearch=clearSearch;CodeMirror.commands.replace=replace;CodeMirror.commands.replaceAll=function(cm){replace(cm,true);};var Pos=CodeMirror.Pos;function SearchCursor(cm,query,pos,caseFold){this.atOccurrence=false;this.cm=cm;if(caseFold==null&&typeof query=="string")caseFold=false;pos=pos?cm.clipPos(pos):Pos(0,0);this.pos={from:pos,to:pos};if(typeof query!="string"){if(!query.global)query=new RegExp(query.source,query.ignoreCase?"ig":"g");this.matches=function(reverse,pos){if(reverse){query.lastIndex=0;var line=cm.getLine(pos.line).slice(0,pos.ch),match=query.exec(line),start=0;while(match){start+=match.index+1;line=line.slice(start);query.lastIndex=0;var newmatch=query.exec(line);if(newmatch)match=newmatch;else break;}
start--;}else{query.lastIndex=pos.ch;var line=cm.getLine(pos.line),match=query.exec(line),start=match&&match.index;}
if(match&&match[0])
return{from:Pos(pos.line,start),to:Pos(pos.line,start+match[0].length),match:match};};}else{if(caseFold)query=query.toLowerCase();var fold=caseFold?function(str){return str.toLowerCase();}:function(str){return str;};var target=query.split("\n");if(target.length==1){if(!query.length){this.matches=function(){};}else{this.matches=function(reverse,pos){var line=fold(cm.getLine(pos.line)),len=query.length,match;if(reverse?(pos.ch>=len&&(match=line.lastIndexOf(query,pos.ch-len))!=-1):(match=line.indexOf(query,pos.ch))!=-1)
return{from:Pos(pos.line,match),to:Pos(pos.line,match+len)};};}}else{this.matches=function(reverse,pos){var ln=pos.line,idx=(reverse?target.length-1:0),match=target[idx],line=fold(cm.getLine(ln));var offsetA=(reverse?line.indexOf(match)+match.length:line.lastIndexOf(match));if(reverse?offsetA>=pos.ch||offsetA!=match.length:offsetA<=pos.ch||offsetA!=line.length-match.length)
return;for(;;){if(reverse?!ln:ln==cm.lineCount()-1)return;line=fold(cm.getLine(ln+=reverse?-1:1));match=target[reverse?--idx:++idx];if(idx>0&&idx<target.length-1){if(line!=match)return;else continue;}
var offsetB=(reverse?line.lastIndexOf(match):line.indexOf(match)+match.length);if(reverse?offsetB!=line.length-match.length:offsetB!=match.length)
return;var start=Pos(pos.line,offsetA),end=Pos(ln,offsetB);return{from:reverse?end:start,to:reverse?start:end};}};}}}
SearchCursor.prototype={findNext:function(){return this.find(false);},findPrevious:function(){return this.find(true);},find:function(reverse){var self=this,pos=this.cm.clipPos(reverse?this.pos.from:this.pos.to);function savePosAndFail(line){var pos=Pos(line,0);self.pos={from:pos,to:pos};self.atOccurrence=false;return false;}
for(;;){if(this.pos=this.matches(reverse,pos)){if(!this.pos.from||!this.pos.to){console.log(this.matches,this.pos);}
this.atOccurrence=true;return this.pos.match||true;}
if(reverse){if(!pos.line)return savePosAndFail(0);pos=Pos(pos.line-1,this.cm.getLine(pos.line-1).length);}
else{var maxLine=this.cm.lineCount();if(pos.line==maxLine-1)return savePosAndFail(maxLine);pos=Pos(pos.line+1,0);}}},from:function(){if(this.atOccurrence)return this.pos.from;},to:function(){if(this.atOccurrence)return this.pos.to;},replace:function(newText){if(!this.atOccurrence)return;var lines=CodeMirror.splitLines(newText);this.cm.replaceRange(lines,this.pos.from,this.pos.to);this.pos.to=Pos(this.pos.from.line+lines.length-1,lines[lines.length-1].length+(lines.length==1?this.pos.from.ch:0));}};CodeMirror.defineExtension("getSearchCursor",function(query,pos,caseFold){return new SearchCursor(this,query,pos,caseFold);});CodeMirror.defineOption("collapseRange",false,function(cm,val,old){var wasOn=old&&old!=CodeMirror.Init;if(val&&!wasOn)
enableRangeCollapsing(cm);else if(!val&&wasOn)
disableRangeCollapsing(cm);});var gutterClass="CodeMirror-collapserange";function enableRangeCollapsing(cm){cm.on("gutterClick",gutterClick);cm.setOption("gutters",(cm.getOption("gutters")||[]).concat([gutterClass]));}
function disableRangeCollapsing(cm){cm.rangeCollapseStart=null;cm.off("gutterClick",gutterClick);var gutters=cm.getOption("gutters");for(var i=0;i<gutters.length&&gutters[i]!=gutterClass;++i){}
cm.setOption("gutters",gutters.slice(0,i).concat(gutters.slice(i+1)));}
function gutterClick(cm,line,gutter){if(gutter!=gutterClass)return;var start=cm.rangeCollapseStart;if(start){var old=cm.getLineNumber(start);cm.setGutterMarker(start,gutterClass,null);cm.rangeCollapseStart=null;var from=Math.min(old,line),to=Math.max(old,line);if(from!=to){var fold=cm.markText(CodeMirror.Pos(from+1,0),{line:to-1},{collapsed:true,inclusiveLeft:true,inclusiveRight:true,clearOnEnter:true});var clear=function(){cm.setGutterMarker(topLine,gutterClass,null);cm.setGutterMarker(botLine,gutterClass,null);fold.clear();};var topLine=cm.setGutterMarker(from,gutterClass,makeMarker(true,true,clear));var botLine=cm.setGutterMarker(to,gutterClass,makeMarker(false,true,clear));CodeMirror.on(fold,"clear",clear);return;}}
cm.rangeCollapseStart=cm.setGutterMarker(line,gutterClass,makeMarker(true,false));}
function makeMarker(isTop,isFinished,handler){var node=document.createElement("div");node.innerHTML=isTop?"\u25bc":"\u25b2";if(!isFinished)node.style.color="red";node.style.fontSize="85%";node.style.cursor="pointer";if(handler)CodeMirror.on(node,"mousedown",handler);return node;}
var DEFAULT_BRACKETS="()[]{}''\"\"";CodeMirror.defineOption("autoCloseBrackets",false,function(cm,val,old){var wasOn=old&&old!=CodeMirror.Init;if(val&&!wasOn)
cm.addKeyMap(buildKeymap(typeof val=="string"?val:DEFAULT_BRACKETS));else if(!val&&wasOn)
cm.removeKeyMap("autoCloseBrackets");});function buildKeymap(pairs){var map={name:"autoCloseBrackets"};for(var i=0;i<pairs.length;i+=2)(function(left,right){function maybeOverwrite(cm){var cur=cm.getCursor(),ahead=cm.getRange(cur,CodeMirror.Pos(cur.line,cur.ch+1));if(ahead!=right)return CodeMirror.Pass;else cm.execCommand("goCharRight");}
map["'"+left+"'"]=function(cm){if(left==right&&maybeOverwrite(cm)!=CodeMirror.Pass)return;var cur=cm.getCursor("start"),ahead=CodeMirror.Pos(cur.line,cur.ch+1);cm.replaceSelection(left+right,{head:ahead,anchor:ahead});};if(left!=right)map["'"+right+"'"]=maybeOverwrite;})(pairs.charAt(i),pairs.charAt(i+1));return map;}
CodeMirror.defineOption("autoCloseTags",false,function(cm,val,old){if(val&&(old==CodeMirror.Init||!old)){var map={name:"autoCloseTags"};if(typeof val!="object"||val.whenClosing)
map["'/'"]=function(cm){return autoCloseTag(cm,'/');};if(typeof val!="object"||val.whenOpening)
map["'>'"]=function(cm){return autoCloseTag(cm,'>');};cm.addKeyMap(map);}else if(!val&&(old!=CodeMirror.Init&&old)){cm.removeKeyMap("autoCloseTags");}});var htmlDontClose=["area","base","br","col","command","embed","hr","img","input","keygen","link","meta","param","source","track","wbr"];var htmlIndent=["applet","blockquote","body","button","div","dl","fieldset","form","frameset","h1","h2","h3","h4","h5","h6","head","html","iframe","layer","legend","object","ol","p","select","table","ul"];function autoCloseTag(cm,ch){var pos=cm.getCursor(),tok=cm.getTokenAt(pos);var inner=CodeMirror.innerMode(cm.getMode(),tok.state),state=inner.state;if(inner.mode.name!="xml")return CodeMirror.Pass;var opt=cm.getOption("autoCloseTags"),html=inner.mode.configuration=="html";var dontCloseTags=(typeof opt=="object"&&opt.dontCloseTags)||(html&&htmlDontClose);var indentTags=(typeof opt=="object"&&opt.indentTags)||(html&&htmlIndent);if(ch==">"&&state.tagName){var tagName=state.tagName;if(tok.end>pos.ch)tagName=tagName.slice(0,tagName.length-tok.end+pos.ch);var lowerTagName=tagName.toLowerCase();if(tok.type=="tag"&&state.type=="closeTag"||/\/\s*$/.test(tok.string)||dontCloseTags&&indexOf(dontCloseTags,lowerTagName)>-1)
return CodeMirror.Pass;var doIndent=indentTags&&indexOf(indentTags,lowerTagName)>-1;var curPos=doIndent?CodeMirror.Pos(pos.line+1,0):CodeMirror.Pos(pos.line,pos.ch+1);cm.replaceSelection(">"+(doIndent?"\n\n":"")+"</"+tagName+">",{head:curPos,anchor:curPos});if(doIndent){cm.indentLine(pos.line+1);cm.indentLine(pos.line+2);}
return;}else if(ch=="/"&&tok.string=="<"){var tagName=state.context&&state.context.tagName;if(tagName)cm.replaceSelection("/"+tagName+">","end");return;}
return CodeMirror.Pass;}
function indexOf(collection,elt){if(collection.indexOf)return collection.indexOf(elt);for(var i=0,e=collection.length;i<e;++i)
if(collection[i]==elt)return i;return-1;}
var ie_lt8=/MSIE \d/.test(navigator.userAgent)&&(document.documentMode==null||document.documentMode<8);var Pos=CodeMirror.Pos;var maxLineLen=1000;var matching={"(":")>",")":"(<","[":"]>","]":"[<","{":"}>","}":"{<"};function findMatchingBracket(cm){var cur=cm.getCursor(),line=cm.getLineHandle(cur.line),pos=cur.ch-1;var match=(pos>=0&&matching[line.text.charAt(pos)])||matching[line.text.charAt(++pos)];if(!match)return null;var forward=match.charAt(1)==">",d=forward?1:-1;var style=cm.getTokenAt(Pos(cur.line,pos+1)).type;var stack=[line.text.charAt(pos)],re=/[(){}[\]]/;function scan(line,lineNo,start){if(!line.text)return;var pos=forward?0:line.text.length-1,end=forward?line.text.length:-1;if(start!=null)pos=start+d;for(;pos!=end;pos+=d){var ch=line.text.charAt(pos);if(re.test(ch)&&cm.getTokenAt(Pos(lineNo,pos+1)).type==style){var match=matching[ch];if(match.charAt(1)==">"==forward)stack.push(ch);else if(stack.pop()!=match.charAt(0))return{pos:pos,match:false};else if(!stack.length)return{pos:pos,match:true};}}}
for(var i=cur.line,found,e=forward?Math.min(i+100,cm.lineCount()):Math.max(-1,i-100);i!=e;i+=d){if(i==cur.line)found=scan(line,i,pos);else found=scan(cm.getLineHandle(i),i);if(found)break;}
return{from:Pos(cur.line,pos),to:found&&Pos(i,found.pos),match:found&&found.match};}
function matchBrackets(cm,autoclear){var found=findMatchingBracket(cm);if(!found||cm.getLine(found.from.line).length>maxLineLen||found.to&&cm.getLine(found.to.line).length>maxLineLen)
return;var style=found.match?"CodeMirror-matchingbracket":"CodeMirror-nonmatchingbracket";var one=cm.markText(found.from,Pos(found.from.line,found.from.ch+1),{className:style});var two=found.to&&cm.markText(found.to,Pos(found.to.line,found.to.ch+1),{className:style});if(ie_lt8&&cm.state.focused)cm.display.input.focus();var clear=function(){cm.operation(function(){one.clear();two&&two.clear();});};if(autoclear)setTimeout(clear,800);else return clear;}
var currentlyHighlighted=null;function doMatchBrackets(cm){cm.operation(function(){if(currentlyHighlighted){currentlyHighlighted();currentlyHighlighted=null;}
if(!cm.somethingSelected())currentlyHighlighted=matchBrackets(cm,false);});}
CodeMirror.defineOption("matchBrackets",false,function(cm,val){if(val)cm.on("cursorActivity",doMatchBrackets);else cm.off("cursorActivity",doMatchBrackets);});CodeMirror.defineExtension("matchBrackets",function(){matchBrackets(this,true);});CodeMirror.defineExtension("findMatchingBracket",function(){return findMatchingBracket(this);});CodeMirror.extendMode("css",{commentStart:"/*",commentEnd:"*/",newlineAfterToken:function(_type,content){return/^[;{}]$/.test(content);}});CodeMirror.extendMode("javascript",{commentStart:"/*",commentEnd:"*/",newlineAfterToken:function(_type,content,textAfter,state){if(this.jsonMode){return/^[\[,{]$/.test(content)||/^}/.test(textAfter);}else{if(content==";"&&state.lexical&&state.lexical.type==")")return false;return/^[;{}]$/.test(content)&&!/^;/.test(textAfter);}}});var inlineElements=/^(a|abbr|acronym|area|base|bdo|big|br|button|caption|cite|code|col|colgroup|dd|del|dfn|em|frame|hr|iframe|img|input|ins|kbd|label|legend|link|map|object|optgroup|option|param|q|samp|script|select|small|span|strong|sub|sup|textarea|tt|var)$/;CodeMirror.extendMode("xml",{commentStart:"<!--",commentEnd:"-->",newlineAfterToken:function(type,content,textAfter,state){var inline=false;if(this.configuration=="html")
inline=state.context?inlineElements.test(state.context.tagName):false;return!inline&&((type=="tag"&&/>$/.test(content)&&state.context)||/^</.test(textAfter));}});CodeMirror.defineExtension("commentRange",function(isComment,from,to){var cm=this,curMode=CodeMirror.innerMode(cm.getMode(),cm.getTokenAt(from).state).mode;cm.operation(function(){if(isComment){cm.replaceRange(curMode.commentEnd,to);cm.replaceRange(curMode.commentStart,from);if(from.line==to.line&&from.ch==to.ch)
cm.setCursor(from.line,from.ch+curMode.commentStart.length);}else{var selText=cm.getRange(from,to);var startIndex=selText.indexOf(curMode.commentStart);var endIndex=selText.lastIndexOf(curMode.commentEnd);if(startIndex>-1&&endIndex>-1&&endIndex>startIndex){selText=selText.substr(0,startIndex)
+selText.substring(startIndex+curMode.commentStart.length,endIndex)
+selText.substr(endIndex+curMode.commentEnd.length);}
cm.replaceRange(selText,from,to);}});});CodeMirror.defineExtension("autoIndentRange",function(from,to){var cmInstance=this;this.operation(function(){for(var i=from.line;i<=to.line;i++){cmInstance.indentLine(i,"smart");}});});CodeMirror.defineExtension("autoFormatRange",function(from,to){var cm=this;var outer=cm.getMode(),text=cm.getRange(from,to).split("\n");var state=CodeMirror.copyState(outer,cm.getTokenAt(from).state);var tabSize=cm.getOption("tabSize");var out="",lines=0,atSol=from.ch==0;function newline(){out+="\n";atSol=true;++lines;}
for(var i=0;i<text.length;++i){var stream=new CodeMirror.StringStream(text[i],tabSize);while(!stream.eol()){var inner=CodeMirror.innerMode(outer,state);var style=outer.token(stream,state),cur=stream.current();stream.start=stream.pos;if(!atSol||/\S/.test(cur)){out+=cur;atSol=false;}
if(!atSol&&inner.mode.newlineAfterToken&&inner.mode.newlineAfterToken(style,cur,stream.string.slice(stream.pos)||text[i+1]||"",inner.state))
newline();}
if(!stream.pos&&outer.blankLine)outer.blankLine(state);if(!atSol&&i<text.length-1)newline();}
cm.operation(function(){cm.replaceRange(out,from,to);for(var cur=from.line+1,end=from.line+lines;cur<=end;++cur)
cm.indentLine(cur,"smart");cm.setSelection(from,cm.getCursor(false));});});})();